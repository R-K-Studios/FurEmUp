<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Singleton
//if there are more than one of these, then destroy the others
if(instance_number(oHUD) &gt; 1){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI for Clientside Player
draw_set_color(c_white);
//Set Common Spacing Variables
padding = 10;
screenPadding = 25;
barWidth = 520;
barHeight = 37;
//Get Data
HPPercent = (oGame.PlayerHP-25)/100.0;
Character = oGame.PlayerCharacterID;
Item = oGame.HeldItemID;
lives = oGame.PlayerLives;
score_show=string_format(oGame.PlayerScore,15,0);
score_show=string_replace_all(score_show,' ','0')

//Draw Face
draw_sprite(sFaces, Character, screenPadding+7, screenPadding+7)

//Current HPBar
draw_rectangle_colour(screenPadding+122, screenPadding+16, screenPadding+122 + barWidth, screenPadding + 16 + barHeight, c_red,c_red,c_red,c_red,0);
draw_rectangle_colour(screenPadding+122, screenPadding+16, (screenPadding+122 + barWidth)*HPPercent, screenPadding + 16 + barHeight, c_yellow,c_yellow,c_yellow,c_yellow,0);
//Draw HPBar Frame
draw_sprite(sHPBar,0,screenPadding, screenPadding);
//Draw CharacterName
draw_set_font(fntBerlin20);
draw_text_outline(screenPadding+110, padding+10, oGame.Characters[Character],c_black);

//draw Score
draw_set_font(fntBrushS);
draw_set_halign(fa_right);
draw_text_outline(sprite_get_width(sHPBar), padding, "Score: " + score_show,c_black);
draw_set_halign(fa_left);

//draw Lives
draw_set_font(fntBrushL);
draw_text_outline(screenPadding, 110, "x" + string(lives),c_black);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
